// Generated from TEST.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class TESTLexer extends Lexer {
	public static readonly WS = 1;
	public static readonly STRINGS = 2;
	public static readonly NUMBER = 3;
	public static readonly DOT = 4;
	public static readonly DDOT = 5;
	public static readonly COMMA = 6;
	public static readonly HEAD_SEPARATOR = 7;
	public static readonly SEMICOLON = 8;
	public static readonly COLON = 9;
	public static readonly AT = 10;
	public static readonly CONS = 11;
	public static readonly WCONS = 12;
	public static readonly PLUS = 13;
	public static readonly DASH = 14;
	public static readonly TIMES = 15;
	public static readonly SLASH = 16;
	public static readonly BACK_SLASH = 17;
	public static readonly PARAM_OPEN = 18;
	public static readonly PARAM_CLOSE = 19;
	public static readonly SQUARE_OPEN = 20;
	public static readonly SQUARE_CLOSED = 21;
	public static readonly CURLY_OPEN = 22;
	public static readonly CURLY_CLOSE = 23;
	public static readonly QUERY_MARK = 24;
	public static readonly ANON_VAR = 25;
	public static readonly EQUAL = 26;
	public static readonly UNEQUAL = 27;
	public static readonly LESS = 28;
	public static readonly GREATER = 29;
	public static readonly LESS_OR_EQ = 30;
	public static readonly GREATER_OR_EQ = 31;
	public static readonly AMPERSAND = 32;
	public static readonly EXISTS = 33;
	public static readonly START_TEST = 34;
	public static readonly END_TEST = 35;
	public static readonly NAME = 36;
	public static readonly NAME_1 = 37;
	public static readonly RULE_AFTER_AT = 38;
	public static readonly LABEL = 39;
	public static readonly RULES = 40;
	public static readonly BLOCK = 41;
	public static readonly TEST = 42;
	public static readonly CONSTRAINT = 43;
	public static readonly SCOPE = 44;
	public static readonly PROGRAM_FILES = 45;
	public static readonly INPUT = 46;
	public static readonly INPUT_FILES = 47;
	public static readonly ASSERT = 48;
	public static readonly ATOMS = 49;
	public static readonly COST = 50;
	public static readonly LEVEL = 51;
	public static readonly PROGRAM = 52;
	public static readonly ADD_FILES = 53;
	public static readonly NUM_STR = 54;
	public static readonly ASSERT_NAS = 55;
	public static readonly ASSERT_TIA = 56;
	public static readonly ASSERT_TIAL = 57;
	public static readonly ASSERT_TIAM = 58;
	public static readonly ASSERT_TIE = 59;
	public static readonly ASSERT_FIA = 60;
	public static readonly ASSERT_FIAL = 61;
	public static readonly ASSERT_FIAM = 62;
	public static readonly ASSERT_FIE = 63;
	public static readonly ASSERT_C = 64;
	public static readonly ASSERT_CIE = 65;
	public static readonly ASSERT_CIAL = 66;
	public static readonly ASSERT_CIAM = 67;
	public static readonly ASSERT_BMC = 68;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"WS", "STRINGS", "NUMBER", "DOT", "DDOT", "COMMA", "HEAD_SEPARATOR", "SEMICOLON", 
		"COLON", "AT", "CONS", "WCONS", "PLUS", "DASH", "TIMES", "SLASH", "BACK_SLASH", 
		"PARAM_OPEN", "PARAM_CLOSE", "SQUARE_OPEN", "SQUARE_CLOSED", "CURLY_OPEN", 
		"CURLY_CLOSE", "QUERY_MARK", "ANON_VAR", "EQUAL", "UNEQUAL", "LESS", "GREATER", 
		"LESS_OR_EQ", "GREATER_OR_EQ", "AMPERSAND", "EXISTS", "START_TEST", "END_TEST", 
		"NAME", "NAME_1", "RULE_AFTER_AT", "LABEL", "RULES", "BLOCK", "TEST", 
		"CONSTRAINT", "SCOPE", "PROGRAM_FILES", "INPUT", "INPUT_FILES", "ASSERT", 
		"ATOMS", "COST", "LEVEL", "PROGRAM", "ADD_FILES", "NUM_STR", "ASSERT_NAS", 
		"ASSERT_TIA", "ASSERT_TIAL", "ASSERT_TIAM", "ASSERT_TIE", "ASSERT_FIA", 
		"ASSERT_FIAL", "ASSERT_FIAM", "ASSERT_FIE", "ASSERT_C", "ASSERT_CIE", 
		"ASSERT_CIAL", "ASSERT_CIAM", "ASSERT_BMC",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, "'.'", "'..'", "','", "'|'", 
		"';'", "':'", "'@'", "':-'", "':~'", "'+'", "'-'", "'*'", "'/'", "'\\'", 
		"'('", "')'", "'['", "']'", "'{'", "'}'", "'?'", "'_'", undefined, undefined, 
		"'<'", "'>'", "'<='", "'>='", "'&'", "'\\'", "'%**'", "'**%'", "'name'", 
		"'\"name\"'", "'rule'", "'labels'", "'rules'", "'block'", "'test'", "'constraint'", 
		"'scope'", "'file'", "'input'", "'inputFiles'", "'\"assert\"'", "'atoms'", 
		"'cost'", "'level'", "'program'", "'additionalFiles'", "'number'", "'noAnswerSet'", 
		"'trueInAll'", "'trueInAtLeast'", "'trueInAtMost'", "'trueInExactly'", 
		"'falseInAll'", "'falseInAtLeast'", "'falseInAtMost'", "'falseInExactly'", 
		"'constraintForAll'", "'constraintInExactly'", "'constraintInAtLeast'", 
		"'constraintInAtMost'", "'bestModelCost'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "WS", "STRINGS", "NUMBER", "DOT", "DDOT", "COMMA", "HEAD_SEPARATOR", 
		"SEMICOLON", "COLON", "AT", "CONS", "WCONS", "PLUS", "DASH", "TIMES", 
		"SLASH", "BACK_SLASH", "PARAM_OPEN", "PARAM_CLOSE", "SQUARE_OPEN", "SQUARE_CLOSED", 
		"CURLY_OPEN", "CURLY_CLOSE", "QUERY_MARK", "ANON_VAR", "EQUAL", "UNEQUAL", 
		"LESS", "GREATER", "LESS_OR_EQ", "GREATER_OR_EQ", "AMPERSAND", "EXISTS", 
		"START_TEST", "END_TEST", "NAME", "NAME_1", "RULE_AFTER_AT", "LABEL", 
		"RULES", "BLOCK", "TEST", "CONSTRAINT", "SCOPE", "PROGRAM_FILES", "INPUT", 
		"INPUT_FILES", "ASSERT", "ATOMS", "COST", "LEVEL", "PROGRAM", "ADD_FILES", 
		"NUM_STR", "ASSERT_NAS", "ASSERT_TIA", "ASSERT_TIAL", "ASSERT_TIAM", "ASSERT_TIE", 
		"ASSERT_FIA", "ASSERT_FIAL", "ASSERT_FIAM", "ASSERT_FIE", "ASSERT_C", 
		"ASSERT_CIE", "ASSERT_CIAL", "ASSERT_CIAM", "ASSERT_BMC",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(TESTLexer._LITERAL_NAMES, TESTLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return TESTLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(TESTLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "TEST.g4"; }

	// @Override
	public get ruleNames(): string[] { return TESTLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return TESTLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return TESTLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return TESTLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02F\u024C\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04" +
		"=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x04D\tD\x04E\tE\x03" +
		"\x02\x06\x02\x8D\n\x02\r\x02\x0E\x02\x8E\x03\x02\x03\x02\x03\x03\x03\x03" +
		"\x03\x03\x03\x03\x07\x03\x97\n\x03\f\x03\x0E\x03\x9A\v\x03\x03\x03\x03" +
		"\x03\x03\x04\x06\x04\x9F\n\x04\r\x04\x0E\x04\xA0\x03\x05\x03\x05\x03\x06" +
		"\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03" +
		"\v\x03\v\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0F\x03" +
		"\x0F\x03\x10\x03\x10\x03\x11\x03\x11\x03\x12\x03\x12\x03\x13\x03\x13\x03" +
		"\x14\x03\x14\x03\x15\x03\x15\x03\x16\x03\x16\x03\x17\x03\x17\x03\x18\x03" +
		"\x18\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x05\x1B\xD5" +
		"\n\x1B\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x05\x1C\xDB\n\x1C\x03\x1D\x03\x1D" +
		"\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03\x1F\x03 \x03 \x03 \x03!\x03!\x03" +
		"\"\x03\"\x03\"\x03#\x03#\x03#\x03#\x03$\x03$\x03$\x03$\x03%\x03%\x03%" +
		"\x03%\x03%\x03&\x03&\x03&\x03&\x03&\x03&\x03&\x03\'\x03\'\x03\'\x03\'" +
		"\x03\'\x03(\x03(\x03(\x03(\x03(\x03(\x03(\x03)\x03)\x03)\x03)\x03)\x03" +
		")\x03*\x03*\x03*\x03*\x03*\x03*\x03+\x03+\x03+\x03+\x03+\x03,\x03,\x03" +
		",\x03,\x03,\x03,\x03,\x03,\x03,\x03,\x03,\x03-\x03-\x03-\x03-\x03-\x03" +
		"-\x03.\x03.\x03.\x03.\x03.\x03/\x03/\x03/\x03/\x03/\x03/\x030\x030\x03" +
		"0\x030\x030\x030\x030\x030\x030\x030\x030\x031\x031\x031\x031\x031\x03" +
		"1\x031\x031\x031\x032\x032\x032\x032\x032\x032\x033\x033\x033\x033\x03" +
		"3\x034\x034\x034\x034\x034\x034\x035\x035\x035\x035\x035\x035\x035\x03" +
		"5\x036\x036\x036\x036\x036\x036\x036\x036\x036\x036\x036\x036\x036\x03" +
		"6\x036\x036\x037\x037\x037\x037\x037\x037\x037\x038\x038\x038\x038\x03" +
		"8\x038\x038\x038\x038\x038\x038\x038\x039\x039\x039\x039\x039\x039\x03" +
		"9\x039\x039\x039\x03:\x03:\x03:\x03:\x03:\x03:\x03:\x03:\x03:\x03:\x03" +
		":\x03:\x03:\x03:\x03;\x03;\x03;\x03;\x03;\x03;\x03;\x03;\x03;\x03;\x03" +
		";\x03;\x03;\x03<\x03<\x03<\x03<\x03<\x03<\x03<\x03<\x03<\x03<\x03<\x03" +
		"<\x03<\x03<\x03=\x03=\x03=\x03=\x03=\x03=\x03=\x03=\x03=\x03=\x03=\x03" +
		">\x03>\x03>\x03>\x03>\x03>\x03>\x03>\x03>\x03>\x03>\x03>\x03>\x03>\x03" +
		">\x03?\x03?\x03?\x03?\x03?\x03?\x03?\x03?\x03?\x03?\x03?\x03?\x03?\x03" +
		"?\x03@\x03@\x03@\x03@\x03@\x03@\x03@\x03@\x03@\x03@\x03@\x03@\x03@\x03" +
		"@\x03@\x03A\x03A\x03A\x03A\x03A\x03A\x03A\x03A\x03A\x03A\x03A\x03A\x03" +
		"A\x03A\x03A\x03A\x03A\x03B\x03B\x03B\x03B\x03B\x03B\x03B\x03B\x03B\x03" +
		"B\x03B\x03B\x03B\x03B\x03B\x03B\x03B\x03B\x03B\x03B\x03C\x03C\x03C\x03" +
		"C\x03C\x03C\x03C\x03C\x03C\x03C\x03C\x03C\x03C\x03C\x03C\x03C\x03C\x03" +
		"C\x03C\x03C\x03D\x03D\x03D\x03D\x03D\x03D\x03D\x03D\x03D\x03D\x03D\x03" +
		"D\x03D\x03D\x03D\x03D\x03D\x03D\x03D\x03E\x03E\x03E\x03E\x03E\x03E\x03" +
		"E\x03E\x03E\x03E\x03E\x03E\x03E\x03E\x03\x98\x02\x02F\x03\x02\x03\x05" +
		"\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13" +
		"\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02" +
		"\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/" +
		"\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?" +
		"\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(O\x02)Q\x02*S\x02+U\x02" +
		",W\x02-Y\x02.[\x02/]\x020_\x021a\x022c\x023e\x024g\x025i\x026k\x027m\x02" +
		"8o\x029q\x02:s\x02;u\x02<w\x02=y\x02>{\x02?}\x02@\x7F\x02A\x81\x02B\x83" +
		"\x02C\x85\x02D\x87\x02E\x89\x02F\x03\x02\x04\x05\x02\v\f\x0F\x0F\"\"\x03" +
		"\x022;\x02\u0251\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07" +
		"\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03" +
		"\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03" +
		"\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03" +
		"\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03" +
		"\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02" +
		"\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02" +
		"-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02" +
		"\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02" +
		"\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03" +
		"\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02" +
		"\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02" +
		"O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02\x02\x02U\x03\x02" +
		"\x02\x02\x02W\x03\x02\x02\x02\x02Y\x03\x02\x02\x02\x02[\x03\x02\x02\x02" +
		"\x02]\x03\x02\x02\x02\x02_\x03\x02\x02\x02\x02a\x03\x02\x02\x02\x02c\x03" +
		"\x02\x02\x02\x02e\x03\x02\x02\x02\x02g\x03\x02\x02\x02\x02i\x03\x02\x02" +
		"\x02\x02k\x03\x02\x02\x02\x02m\x03\x02\x02\x02\x02o\x03\x02\x02\x02\x02" +
		"q\x03\x02\x02\x02\x02s\x03\x02\x02\x02\x02u\x03\x02\x02\x02\x02w\x03\x02" +
		"\x02\x02\x02y\x03\x02\x02\x02\x02{\x03\x02\x02\x02\x02}\x03\x02\x02\x02" +
		"\x02\x7F\x03\x02\x02\x02\x02\x81\x03\x02\x02\x02\x02\x83\x03\x02\x02\x02" +
		"\x02\x85\x03\x02\x02\x02\x02\x87\x03\x02\x02\x02\x02\x89\x03\x02\x02\x02" +
		"\x03\x8C\x03\x02\x02\x02\x05\x92\x03\x02\x02\x02\x07\x9E\x03\x02\x02\x02" +
		"\t\xA2\x03\x02\x02\x02\v\xA4\x03\x02\x02\x02\r\xA7\x03\x02\x02\x02\x0F" +
		"\xA9\x03\x02\x02\x02\x11\xAB\x03\x02\x02\x02\x13\xAD\x03\x02\x02\x02\x15" +
		"\xAF\x03\x02\x02\x02\x17\xB1\x03\x02\x02\x02\x19\xB4\x03\x02\x02\x02\x1B" +
		"\xB7\x03\x02\x02\x02\x1D\xB9\x03\x02\x02\x02\x1F\xBB\x03\x02\x02\x02!" +
		"\xBD\x03\x02\x02\x02#\xBF\x03\x02\x02\x02%\xC1\x03\x02\x02\x02\'\xC3\x03" +
		"\x02\x02\x02)\xC5\x03\x02\x02\x02+\xC7\x03\x02\x02\x02-\xC9\x03\x02\x02" +
		"\x02/\xCB\x03\x02\x02\x021\xCD\x03\x02\x02\x023\xCF\x03\x02\x02\x025\xD4" +
		"\x03\x02\x02\x027\xDA\x03\x02\x02\x029\xDC\x03\x02\x02\x02;\xDE\x03\x02" +
		"\x02\x02=\xE0\x03\x02\x02\x02?\xE3\x03\x02\x02\x02A\xE6\x03\x02\x02\x02" +
		"C\xE8\x03\x02\x02\x02E\xEB\x03\x02\x02\x02G\xEF\x03\x02\x02\x02I\xF3\x03" +
		"\x02\x02\x02K\xF8\x03\x02\x02\x02M\xFF\x03\x02\x02\x02O\u0104\x03\x02" +
		"\x02\x02Q\u010B\x03\x02\x02\x02S\u0111\x03\x02\x02\x02U\u0117\x03\x02" +
		"\x02\x02W\u011C\x03\x02\x02\x02Y\u0127\x03\x02\x02\x02[\u012D\x03\x02" +
		"\x02\x02]\u0132\x03\x02\x02\x02_\u0138\x03\x02\x02\x02a\u0143\x03\x02" +
		"\x02\x02c\u014C\x03\x02\x02\x02e\u0152\x03\x02\x02\x02g\u0157\x03\x02" +
		"\x02\x02i\u015D\x03\x02\x02\x02k\u0165\x03\x02\x02\x02m\u0175\x03\x02" +
		"\x02\x02o\u017C\x03\x02\x02\x02q\u0188\x03\x02\x02\x02s\u0192\x03\x02" +
		"\x02\x02u\u01A0\x03\x02\x02\x02w\u01AD\x03\x02\x02\x02y\u01BB\x03\x02" +
		"\x02\x02{\u01C6\x03\x02\x02\x02}\u01D5\x03\x02\x02\x02\x7F\u01E3\x03\x02" +
		"\x02\x02\x81\u01F2\x03\x02\x02\x02\x83\u0203\x03\x02\x02\x02\x85\u0217" +
		"\x03\x02\x02\x02\x87\u022B\x03\x02\x02\x02\x89\u023E\x03\x02\x02\x02\x8B" +
		"\x8D\t\x02\x02\x02\x8C\x8B\x03\x02\x02\x02\x8D\x8E\x03\x02\x02\x02\x8E" +
		"\x8C\x03\x02\x02\x02\x8E\x8F\x03\x02\x02\x02\x8F\x90\x03\x02\x02\x02\x90" +
		"\x91\b\x02\x02\x02\x91\x04\x03\x02\x02\x02\x92\x98\x07$\x02\x02\x93\x94" +
		"\x07^\x02\x02\x94\x97\x07$\x02\x02\x95\x97\v\x02\x02\x02\x96\x93\x03\x02" +
		"\x02\x02\x96\x95\x03\x02\x02\x02\x97\x9A\x03\x02\x02\x02\x98\x99\x03\x02" +
		"\x02\x02\x98\x96\x03\x02\x02\x02\x99\x9B\x03\x02\x02\x02\x9A\x98\x03\x02" +
		"\x02\x02\x9B\x9C\x07$\x02\x02\x9C\x06\x03\x02\x02\x02\x9D\x9F\t\x03\x02" +
		"\x02\x9E\x9D\x03\x02\x02\x02\x9F\xA0\x03\x02\x02\x02\xA0\x9E\x03\x02\x02" +
		"\x02\xA0\xA1\x03\x02\x02\x02\xA1\b\x03\x02\x02\x02\xA2\xA3\x070\x02\x02" +
		"\xA3\n\x03\x02\x02\x02\xA4\xA5\x070\x02\x02\xA5\xA6\x070\x02\x02\xA6\f" +
		"\x03\x02\x02\x02\xA7\xA8\x07.\x02\x02\xA8\x0E\x03\x02\x02\x02\xA9\xAA" +
		"\x07~\x02\x02\xAA\x10\x03\x02\x02\x02\xAB\xAC\x07=\x02\x02\xAC\x12\x03" +
		"\x02\x02\x02\xAD\xAE\x07<\x02\x02\xAE\x14\x03\x02\x02\x02\xAF\xB0\x07" +
		"B\x02\x02\xB0\x16\x03\x02\x02\x02\xB1\xB2\x07<\x02\x02\xB2\xB3\x07/\x02" +
		"\x02\xB3\x18\x03\x02\x02\x02\xB4\xB5\x07<\x02\x02\xB5\xB6\x07\x80\x02" +
		"\x02\xB6\x1A\x03\x02\x02\x02\xB7\xB8\x07-\x02\x02\xB8\x1C\x03\x02\x02" +
		"\x02\xB9\xBA\x07/\x02\x02\xBA\x1E\x03\x02\x02\x02\xBB\xBC\x07,\x02\x02" +
		"\xBC \x03\x02\x02\x02\xBD\xBE\x071\x02\x02\xBE\"\x03\x02\x02\x02\xBF\xC0" +
		"\x07^\x02\x02\xC0$\x03\x02\x02\x02\xC1\xC2\x07*\x02\x02\xC2&\x03\x02\x02" +
		"\x02\xC3\xC4\x07+\x02\x02\xC4(\x03\x02\x02\x02\xC5\xC6\x07]\x02\x02\xC6" +
		"*\x03\x02\x02\x02\xC7\xC8\x07_\x02\x02\xC8,\x03\x02\x02\x02\xC9\xCA\x07" +
		"}\x02\x02\xCA.\x03\x02\x02\x02\xCB\xCC\x07\x7F\x02\x02\xCC0\x03\x02\x02" +
		"\x02\xCD\xCE\x07A\x02\x02\xCE2\x03\x02\x02\x02\xCF\xD0\x07a\x02\x02\xD0" +
		"4\x03\x02\x02\x02\xD1\xD5\x07?\x02\x02\xD2\xD3\x07?\x02\x02\xD3\xD5\x07" +
		"?\x02\x02\xD4\xD1\x03\x02\x02\x02\xD4\xD2\x03\x02\x02\x02\xD56\x03\x02" +
		"\x02\x02\xD6\xD7\x07>\x02\x02\xD7\xDB\x07@\x02\x02\xD8\xD9\x07#\x02\x02" +
		"\xD9\xDB\x07?\x02\x02\xDA\xD6\x03\x02\x02\x02\xDA\xD8\x03\x02\x02\x02" +
		"\xDB8\x03\x02\x02\x02\xDC\xDD\x07>\x02\x02\xDD:\x03\x02\x02\x02\xDE\xDF" +
		"\x07@\x02\x02\xDF<\x03\x02\x02\x02\xE0\xE1\x07>\x02\x02\xE1\xE2\x07?\x02" +
		"\x02\xE2>\x03\x02\x02\x02\xE3\xE4\x07@\x02\x02\xE4\xE5\x07?\x02\x02\xE5" +
		"@\x03\x02\x02\x02\xE6\xE7\x07(\x02\x02\xE7B\x03\x02\x02\x02\xE8\xE9\x07" +
		"^\x02\x02\xE9\xEA\x07G\x02\x02\xEAD\x03\x02\x02\x02\xEB\xEC\x07\'\x02" +
		"\x02\xEC\xED\x07,\x02\x02\xED\xEE\x07,\x02\x02\xEEF\x03\x02\x02\x02\xEF" +
		"\xF0\x07,\x02\x02\xF0\xF1\x07,\x02\x02\xF1\xF2\x07\'\x02\x02\xF2H\x03" +
		"\x02\x02\x02\xF3\xF4\x07p\x02\x02\xF4\xF5\x07c\x02\x02\xF5\xF6\x07o\x02" +
		"\x02\xF6\xF7\x07g\x02\x02\xF7J\x03\x02\x02\x02\xF8\xF9\x07$\x02\x02\xF9" +
		"\xFA\x07p\x02\x02\xFA\xFB\x07c\x02\x02\xFB\xFC\x07o\x02\x02\xFC\xFD\x07" +
		"g\x02\x02\xFD\xFE\x07$\x02\x02\xFEL\x03\x02\x02\x02\xFF\u0100\x07t\x02" +
		"\x02\u0100\u0101\x07w\x02\x02\u0101\u0102\x07n\x02\x02\u0102\u0103\x07" +
		"g\x02\x02\u0103N\x03\x02\x02\x02\u0104\u0105\x07n\x02\x02\u0105\u0106" +
		"\x07c\x02\x02\u0106\u0107\x07d\x02\x02\u0107\u0108\x07g\x02\x02\u0108" +
		"\u0109\x07n\x02\x02\u0109\u010A\x07u\x02\x02\u010AP\x03\x02\x02\x02\u010B" +
		"\u010C\x07t\x02\x02\u010C\u010D\x07w\x02\x02\u010D\u010E\x07n\x02\x02" +
		"\u010E\u010F\x07g\x02\x02\u010F\u0110\x07u\x02\x02\u0110R\x03\x02\x02" +
		"\x02\u0111\u0112\x07d\x02\x02\u0112\u0113\x07n\x02\x02\u0113\u0114\x07" +
		"q\x02\x02\u0114\u0115\x07e\x02\x02\u0115\u0116\x07m\x02\x02\u0116T\x03" +
		"\x02\x02\x02\u0117\u0118\x07v\x02\x02\u0118\u0119\x07g\x02\x02\u0119\u011A" +
		"\x07u\x02\x02\u011A\u011B\x07v\x02\x02\u011BV\x03\x02\x02\x02\u011C\u011D" +
		"\x07e\x02\x02\u011D\u011E\x07q\x02\x02\u011E\u011F\x07p\x02\x02\u011F" +
		"\u0120\x07u\x02\x02\u0120\u0121\x07v\x02\x02\u0121\u0122\x07t\x02\x02" +
		"\u0122\u0123\x07c\x02\x02\u0123\u0124\x07k\x02\x02\u0124\u0125\x07p\x02" +
		"\x02\u0125\u0126\x07v\x02\x02\u0126X\x03\x02\x02\x02\u0127\u0128\x07u" +
		"\x02\x02\u0128\u0129\x07e\x02\x02\u0129\u012A\x07q\x02\x02\u012A\u012B" +
		"\x07r\x02\x02\u012B\u012C\x07g\x02\x02\u012CZ\x03\x02\x02\x02\u012D\u012E" +
		"\x07h\x02\x02\u012E\u012F\x07k\x02\x02\u012F\u0130\x07n\x02\x02\u0130" +
		"\u0131\x07g\x02\x02\u0131\\\x03\x02\x02\x02\u0132\u0133\x07k\x02\x02\u0133" +
		"\u0134\x07p\x02\x02\u0134\u0135\x07r\x02\x02\u0135\u0136\x07w\x02\x02" +
		"\u0136\u0137\x07v\x02\x02\u0137^\x03\x02\x02\x02\u0138\u0139\x07k\x02" +
		"\x02\u0139\u013A\x07p\x02\x02\u013A\u013B\x07r\x02\x02\u013B\u013C\x07" +
		"w\x02\x02\u013C\u013D\x07v\x02\x02\u013D\u013E\x07H\x02\x02\u013E\u013F" +
		"\x07k\x02\x02\u013F\u0140\x07n\x02\x02\u0140\u0141\x07g\x02\x02\u0141" +
		"\u0142\x07u\x02\x02\u0142`\x03\x02\x02\x02\u0143\u0144\x07$\x02\x02\u0144" +
		"\u0145\x07c\x02\x02\u0145\u0146\x07u\x02\x02\u0146\u0147\x07u\x02\x02" +
		"\u0147\u0148\x07g\x02\x02\u0148\u0149\x07t\x02\x02\u0149\u014A\x07v\x02" +
		"\x02\u014A\u014B\x07$\x02\x02\u014Bb\x03\x02\x02\x02\u014C\u014D\x07c" +
		"\x02\x02\u014D\u014E\x07v\x02\x02\u014E\u014F\x07q\x02\x02\u014F\u0150" +
		"\x07o\x02\x02\u0150\u0151\x07u\x02\x02\u0151d\x03\x02\x02\x02\u0152\u0153" +
		"\x07e\x02\x02\u0153\u0154\x07q\x02\x02\u0154\u0155\x07u\x02\x02\u0155" +
		"\u0156\x07v\x02\x02\u0156f\x03\x02\x02\x02\u0157\u0158\x07n\x02\x02\u0158" +
		"\u0159\x07g\x02\x02\u0159\u015A\x07x\x02\x02\u015A\u015B\x07g\x02\x02" +
		"\u015B\u015C\x07n\x02\x02\u015Ch\x03\x02\x02\x02\u015D\u015E\x07r\x02" +
		"\x02\u015E\u015F\x07t\x02\x02\u015F\u0160\x07q\x02\x02\u0160\u0161\x07" +
		"i\x02\x02\u0161\u0162\x07t\x02\x02\u0162\u0163\x07c\x02\x02\u0163\u0164" +
		"\x07o\x02\x02\u0164j\x03\x02\x02\x02\u0165\u0166\x07c\x02\x02\u0166\u0167" +
		"\x07f\x02\x02\u0167\u0168\x07f\x02\x02\u0168\u0169\x07k\x02\x02\u0169" +
		"\u016A\x07v\x02\x02\u016A\u016B\x07k\x02\x02\u016B\u016C\x07q\x02\x02" +
		"\u016C\u016D\x07p\x02\x02\u016D\u016E\x07c\x02\x02\u016E\u016F\x07n\x02" +
		"\x02\u016F\u0170\x07H\x02\x02\u0170\u0171\x07k\x02\x02\u0171\u0172\x07" +
		"n\x02\x02\u0172\u0173\x07g\x02\x02\u0173\u0174\x07u\x02\x02\u0174l\x03" +
		"\x02\x02\x02\u0175\u0176\x07p\x02\x02\u0176\u0177\x07w\x02\x02\u0177\u0178" +
		"\x07o\x02\x02\u0178\u0179\x07d\x02\x02\u0179\u017A\x07g\x02\x02\u017A" +
		"\u017B\x07t\x02\x02\u017Bn\x03\x02\x02\x02\u017C\u017D\x07p\x02\x02\u017D" +
		"\u017E\x07q\x02\x02\u017E\u017F\x07C\x02\x02\u017F\u0180\x07p\x02\x02" +
		"\u0180\u0181\x07u\x02\x02\u0181\u0182\x07y\x02\x02\u0182\u0183\x07g\x02" +
		"\x02\u0183\u0184\x07t\x02\x02\u0184\u0185\x07U\x02\x02\u0185\u0186\x07" +
		"g\x02\x02\u0186\u0187\x07v\x02\x02\u0187p\x03\x02\x02\x02\u0188\u0189" +
		"\x07v\x02\x02\u0189\u018A\x07t\x02\x02\u018A\u018B\x07w\x02\x02\u018B" +
		"\u018C\x07g\x02\x02\u018C\u018D\x07K\x02\x02\u018D\u018E\x07p\x02\x02" +
		"\u018E\u018F\x07C\x02\x02\u018F\u0190\x07n\x02\x02\u0190\u0191\x07n\x02" +
		"\x02\u0191r\x03\x02\x02\x02\u0192\u0193\x07v\x02\x02\u0193\u0194\x07t" +
		"\x02\x02\u0194\u0195\x07w\x02\x02\u0195\u0196\x07g\x02\x02\u0196\u0197" +
		"\x07K\x02\x02\u0197\u0198\x07p\x02\x02\u0198\u0199\x07C\x02\x02\u0199" +
		"\u019A\x07v\x02\x02\u019A\u019B\x07N\x02\x02\u019B\u019C\x07g\x02\x02" +
		"\u019C\u019D\x07c\x02\x02\u019D\u019E\x07u\x02\x02\u019E\u019F\x07v\x02" +
		"\x02\u019Ft\x03\x02\x02\x02\u01A0\u01A1\x07v\x02\x02\u01A1\u01A2\x07t" +
		"\x02\x02\u01A2\u01A3\x07w\x02\x02\u01A3\u01A4\x07g\x02\x02\u01A4\u01A5" +
		"\x07K\x02\x02\u01A5\u01A6\x07p\x02\x02\u01A6\u01A7\x07C\x02\x02\u01A7" +
		"\u01A8\x07v\x02\x02\u01A8\u01A9\x07O\x02\x02\u01A9\u01AA\x07q\x02\x02" +
		"\u01AA\u01AB\x07u\x02\x02\u01AB\u01AC\x07v\x02\x02\u01ACv\x03\x02\x02" +
		"\x02\u01AD\u01AE\x07v\x02\x02\u01AE\u01AF\x07t\x02\x02\u01AF\u01B0\x07" +
		"w\x02\x02\u01B0\u01B1\x07g\x02\x02\u01B1\u01B2\x07K\x02\x02\u01B2\u01B3" +
		"\x07p\x02\x02\u01B3\u01B4\x07G\x02\x02\u01B4\u01B5\x07z\x02\x02\u01B5" +
		"\u01B6\x07c\x02\x02\u01B6\u01B7\x07e\x02\x02\u01B7\u01B8\x07v\x02\x02" +
		"\u01B8\u01B9\x07n\x02\x02\u01B9\u01BA\x07{\x02\x02\u01BAx\x03\x02\x02" +
		"\x02\u01BB\u01BC\x07h\x02\x02\u01BC\u01BD\x07c\x02\x02\u01BD\u01BE\x07" +
		"n\x02\x02\u01BE\u01BF\x07u\x02\x02\u01BF\u01C0\x07g\x02\x02\u01C0\u01C1" +
		"\x07K\x02\x02\u01C1\u01C2\x07p\x02\x02\u01C2\u01C3\x07C\x02\x02\u01C3" +
		"\u01C4\x07n\x02\x02\u01C4\u01C5\x07n\x02\x02\u01C5z\x03\x02\x02\x02\u01C6" +
		"\u01C7\x07h\x02\x02\u01C7\u01C8\x07c\x02\x02\u01C8\u01C9\x07n\x02\x02" +
		"\u01C9\u01CA\x07u\x02\x02\u01CA\u01CB\x07g\x02\x02\u01CB\u01CC\x07K\x02" +
		"\x02\u01CC\u01CD\x07p\x02\x02\u01CD\u01CE\x07C\x02\x02\u01CE\u01CF\x07" +
		"v\x02\x02\u01CF\u01D0\x07N\x02\x02\u01D0\u01D1\x07g\x02\x02\u01D1\u01D2" +
		"\x07c\x02\x02\u01D2\u01D3\x07u\x02\x02\u01D3\u01D4\x07v\x02\x02\u01D4" +
		"|\x03\x02\x02\x02\u01D5\u01D6\x07h\x02\x02\u01D6\u01D7\x07c\x02\x02\u01D7" +
		"\u01D8\x07n\x02\x02\u01D8\u01D9\x07u\x02\x02\u01D9\u01DA\x07g\x02\x02" +
		"\u01DA\u01DB\x07K\x02\x02\u01DB\u01DC\x07p\x02\x02\u01DC\u01DD\x07C\x02" +
		"\x02\u01DD\u01DE\x07v\x02\x02\u01DE\u01DF\x07O\x02\x02\u01DF\u01E0\x07" +
		"q\x02\x02\u01E0\u01E1\x07u\x02\x02\u01E1\u01E2\x07v\x02\x02\u01E2~\x03" +
		"\x02\x02\x02\u01E3\u01E4\x07h\x02\x02\u01E4\u01E5\x07c\x02\x02\u01E5\u01E6" +
		"\x07n\x02\x02\u01E6\u01E7\x07u\x02\x02\u01E7\u01E8\x07g\x02\x02\u01E8" +
		"\u01E9\x07K\x02\x02\u01E9\u01EA\x07p\x02\x02\u01EA\u01EB\x07G\x02\x02" +
		"\u01EB\u01EC\x07z\x02\x02\u01EC\u01ED\x07c\x02\x02\u01ED\u01EE\x07e\x02" +
		"\x02\u01EE\u01EF\x07v\x02\x02\u01EF\u01F0\x07n\x02\x02\u01F0\u01F1\x07" +
		"{\x02\x02\u01F1\x80\x03\x02\x02\x02\u01F2\u01F3\x07e\x02\x02\u01F3\u01F4" +
		"\x07q\x02\x02\u01F4\u01F5\x07p\x02\x02\u01F5\u01F6\x07u\x02\x02\u01F6" +
		"\u01F7\x07v\x02\x02\u01F7\u01F8\x07t\x02\x02\u01F8\u01F9\x07c\x02\x02" +
		"\u01F9\u01FA\x07k\x02\x02\u01FA\u01FB\x07p\x02\x02\u01FB\u01FC\x07v\x02" +
		"\x02\u01FC\u01FD\x07H\x02\x02\u01FD\u01FE\x07q\x02\x02\u01FE\u01FF\x07" +
		"t\x02\x02\u01FF\u0200\x07C\x02\x02\u0200\u0201\x07n\x02\x02\u0201\u0202" +
		"\x07n\x02\x02\u0202\x82\x03\x02\x02\x02\u0203\u0204\x07e\x02\x02\u0204" +
		"\u0205\x07q\x02\x02\u0205\u0206\x07p\x02\x02\u0206\u0207\x07u\x02\x02" +
		"\u0207\u0208\x07v\x02\x02\u0208\u0209\x07t\x02\x02\u0209\u020A\x07c\x02" +
		"\x02\u020A\u020B\x07k\x02\x02\u020B\u020C\x07p\x02\x02\u020C\u020D\x07" +
		"v\x02\x02\u020D\u020E\x07K\x02\x02\u020E\u020F\x07p\x02\x02\u020F\u0210" +
		"\x07G\x02\x02\u0210\u0211\x07z\x02\x02\u0211\u0212\x07c\x02\x02\u0212" +
		"\u0213\x07e\x02\x02\u0213\u0214\x07v\x02\x02\u0214\u0215\x07n\x02\x02" +
		"\u0215\u0216\x07{\x02\x02\u0216\x84\x03\x02\x02\x02\u0217\u0218\x07e\x02" +
		"\x02\u0218\u0219\x07q\x02\x02\u0219\u021A\x07p\x02\x02\u021A\u021B\x07" +
		"u\x02\x02\u021B\u021C\x07v\x02\x02\u021C\u021D\x07t\x02\x02\u021D\u021E" +
		"\x07c\x02\x02\u021E\u021F\x07k\x02\x02\u021F\u0220\x07p\x02\x02\u0220" +
		"\u0221\x07v\x02\x02\u0221\u0222\x07K\x02\x02\u0222\u0223\x07p\x02\x02" +
		"\u0223\u0224\x07C\x02\x02\u0224\u0225\x07v\x02\x02\u0225\u0226\x07N\x02" +
		"\x02\u0226\u0227\x07g\x02\x02\u0227\u0228\x07c\x02\x02\u0228\u0229\x07" +
		"u\x02\x02\u0229\u022A\x07v\x02\x02\u022A\x86\x03\x02\x02\x02\u022B\u022C" +
		"\x07e\x02\x02\u022C\u022D\x07q\x02\x02\u022D\u022E\x07p\x02\x02\u022E" +
		"\u022F\x07u\x02\x02\u022F\u0230\x07v\x02\x02\u0230\u0231\x07t\x02\x02" +
		"\u0231\u0232\x07c\x02\x02\u0232\u0233\x07k\x02\x02\u0233\u0234\x07p\x02" +
		"\x02\u0234\u0235\x07v\x02\x02\u0235\u0236\x07K\x02\x02\u0236\u0237\x07" +
		"p\x02\x02\u0237\u0238\x07C\x02\x02\u0238\u0239\x07v\x02\x02\u0239\u023A" +
		"\x07O\x02\x02\u023A\u023B\x07q\x02\x02\u023B\u023C\x07u\x02\x02\u023C" +
		"\u023D\x07v\x02\x02\u023D\x88\x03\x02\x02\x02\u023E\u023F\x07d\x02\x02" +
		"\u023F\u0240\x07g\x02\x02\u0240\u0241\x07u\x02\x02\u0241\u0242\x07v\x02" +
		"\x02\u0242\u0243\x07O\x02\x02\u0243\u0244\x07q\x02\x02\u0244\u0245\x07" +
		"f\x02\x02\u0245\u0246\x07g\x02\x02\u0246\u0247\x07n\x02\x02\u0247\u0248" +
		"\x07E\x02\x02\u0248\u0249\x07q\x02\x02\u0249\u024A\x07u\x02\x02\u024A" +
		"\u024B\x07v\x02\x02\u024B\x8A\x03\x02\x02\x02\t\x02\x8E\x96\x98\xA0\xD4" +
		"\xDA\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!TESTLexer.__ATN) {
			TESTLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(TESTLexer._serializedATN));
		}

		return TESTLexer.__ATN;
	}

}

